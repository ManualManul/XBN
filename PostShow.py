"""PostShow v1 (https://github.com/ManualManul/XBN)

Python script to generate JSON MP3 chapters, LRC, CUE and simple timestamp files from an Audacity label file.
Written by Manual (@CatVsHumanity on Twitter)
"""

import os
import sys
import time
import csv
from mutagen.easyid3 import EasyID3

try:
  sys.argv[1]
except IndexError:
    sys.exit("PostShow v1.\nGenerate CUE, LRC, JSON and SimpleTXT files using Audacity label marker files.\n\nUsage: <path to label file>\nProcessed files will be saved in the source folder.")
audacity_path = sys.argv[1]
if not os.path.isfile(audacity_path):
    sys.exit("Incorrect path. Aborting.")
if not os.path.isfile(audacity_path[:-3] + 'mp3'):
    sys.exit("Couldn't find the MP3 file, make sure it's located in the same directory as the label file. Aborting.")

audio = EasyID3(audacity_path[:-3] + 'mp3')
reader = csv.reader(open(audacity_path, encoding="utf-8"), delimiter='	', quoting=csv.QUOTE_NONE)
json_output = open(audacity_path[:-3] + 'json','w', encoding="utf-8")
cue_output = open(audacity_path[:-3] + 'cue','w', encoding="utf-8")
lrc_output = open(audacity_path[:-3] + 'lrc','w', encoding="utf-8")
simple_output = open(audacity_path[:-4] + '-simple.txt','w', encoding="utf-8")
trackno = 1
cue_initialized = 0
bit = []
json_bit = []

for row in reader:
    if not row:
        break # Reached EOF

    # Math
    math_milliseconds_total = format(float(row[0]) * 1000, '.1f')
    math_minutes_total = int(time.strftime('%H', time.gmtime(int(float(row[0]))))) * 60 + int(time.strftime('%M', time.gmtime(int(float(row[0])))))
    math_seconds = int(time.strftime('%S', time.gmtime(int(float(row[0])))))
    math_centiseconds = format(float(row[0]) % 1, '.2f')[2:]
    # import pdb; pdb.set_trace()

    # JSON
    bit.append(row[2])
    bit.append(float(math_milliseconds_total))
    json_bit.append(bit)
    bit = []

    # LRC
    lrc_output.write('[' + str(math_minutes_total).zfill(2) + ':' + str(math_seconds).zfill(2) + '.' + str(math_centiseconds).zfill(2) + ']' + row[2] + '\n')

    # CUE
    if cue_initialized is not 1:
        cue_output.write('REM GENRE Podcast\n')
        cue_output.write('REM COMMENT "This cue file has been generated by PostShow v1 (https://github.com/ManualManul)"\n')
        cue_output.write('TITLE "' + audio["title"][0] + '"\n')
        cue_output.write('PERFORMER "' + audio["artist"][0] + '"\n')
        cue_output.write('FILE "' + os.path.basename(audacity_path[:-3] + 'mp3') + '" MP3\n')
        cue_initialized = 1
    cue_output.write('  TRACK ' + str(trackno).zfill(2) + ' AUDIO\n')
    cue_output.write('    TITLE "' + row[2] + '"\n')
    cue_output.write('    INDEX 01 ' + str(math_minutes_total).zfill(2) + ':' + str(math_seconds).zfill(2) + ':' + str(math_centiseconds).zfill(2) + '\n')
    trackno += 1

    # Simple
    simple_output.write(time.strftime('%H:%M:%S', time.gmtime(int(float(row[0])))) + ' - ' + row[2] + '\n')

json_output.write(str(json_bit).replace("['",'["').replace("', ",'", '))

print('Program done.')
